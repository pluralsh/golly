package template

var functionDocs = map[string]string{
	"abbrev":                     "",
	"abbrevboth":                 "",
	"add":                        "Sums numbers. Accepts two or more inputs.",
	"add1":                       "Increments by 1.",
	"add1f":                      "Increments float number by 1.",
	"addf":                       "Sums float numbers.",
	"adler32sum":                 "",
	"ago":                        "",
	"all":                        "",
	"any":                        "",
	"append":                     "",
	"atoi":                       "",
	"b32dec":                     "",
	"b32enc":                     "",
	"b64dec":                     "",
	"b64enc":                     "",
	"base":                       "",
	"bcrypt":                     "",
	"biggest":                    "",
	"buildCustomCert":            "",
	"camelcase":                  "",
	"cat":                        "",
	"ceil":                       "",
	"chunk":                      "",
	"clean":                      "",
	"coalesce":                   "",
	"compact":                    "Accepts a list and removes entries with empty values.",
	"concat":                     "Concatenates arbitrary number of lists into one.",
	"contains":                   "",
	"date":                       "",
	"dateInZone":                 "",
	"dateModify":                 "",
	"date_in_zone":               "",
	"date_modify":                "",
	"decryptAES":                 "",
	"deepCopy":                   "",
	"deepEqual":                  "",
	"default":                    "",
	"derivePassword":             "",
	"dict":                       "",
	"dig":                        "",
	"dir":                        "",
	"div":                        "Performs integer division.",
	"divf":                       "",
	"duration":                   "",
	"durationRound":              "",
	"empty":                      "",
	"encryptAES":                 "",
	"env":                        "Reads environment variable.",
	"expandenv":                  "Substitutes environment variable in a string.",
	"ext":                        "",
	"fail":                       "",
	"first":                      "",
	"float64":                    "",
	"floor":                      "Returns the greatest float value greater than or equal to input value.",
	"fromJson":                   "",
	"genCA":                      "",
	"genCAWithKey":               "",
	"genPrivateKey":              "",
	"genSelfSignedCert":          "",
	"genSelfSignedCertWithKey":   "",
	"genSignedCert":              "",
	"genSignedCertWithKey":       "",
	"get":                        "",
	"getHostByName":              "",
	"has":                        "Checks if a list has a particular element.",
	"hasKey":                     "",
	"hasPrefix":                  "",
	"hasSuffix":                  "",
	"htmlDate":                   "",
	"htmlDateInZone":             "",
	"htpasswd":                   "",
	"indent":                     "",
	"initial":                    "",
	"initials":                   "",
	"int":                        "",
	"int64":                      "",
	"isAbs":                      "",
	"join":                       "",
	"kebabcase":                  "",
	"keys":                       "",
	"kindIs":                     "",
	"kindOf":                     "",
	"last":                       "",
	"list":                       "",
	"lower":                      "",
	"max":                        "Returns the largest of a series of integers.",
	"maxf":                       "",
	"merge":                      "",
	"mergeOverwrite":             "",
	"min":                        "Returns the smallest of a series of integers.",
	"minf":                       "",
	"mod":                        "",
	"mul":                        "",
	"mulf":                       "",
	"mustAppend":                 "",
	"mustChunk":                  "",
	"mustCompact":                "Accepts a list and removes entries with empty values.",
	"mustDateModify":             "",
	"mustDeepCopy":               "",
	"mustFirst":                  "",
	"mustFromJson":               "",
	"mustHas":                    "Checks if a list has a particular element.",
	"mustInitial":                "",
	"mustLast":                   "",
	"mustMerge":                  "",
	"mustMergeOverwrite":         "",
	"mustPrepend":                "",
	"mustPush":                   "",
	"mustRegexFind":              "",
	"mustRegexFindAll":           "",
	"mustRegexMatch":             "",
	"mustRegexReplaceAll":        "",
	"mustRegexReplaceAllLiteral": "",
	"mustRegexSplit":             "",
	"mustRest":                   "",
	"mustReverse":                "Produces a new list with the reversed elements of the given list.",
	"mustSlice":                  "",
	"mustToDate":                 "",
	"mustToJson":                 "",
	"mustToPrettyJson":           "",
	"mustToRawJson":              "",
	"mustUniq":                   "Generates a list with all of the duplicates removed.",
	"mustWithout":                "Filters items out of a list.",
	"must_date_modify":           "",
	"nindent":                    "",
	"nospace":                    "",
	"omit":                       "",
	"osBase":                     "",
	"osClean":                    "",
	"osDir":                      "",
	"osExt":                      "",
	"osIsAbs":                    "",
	"pick":                       "",
	"pluck":                      "",
	"plural":                     "",
	"prepend":                    "",
	"push":                       "",
	"quote":                      "",
	"randAlpha":                  "",
	"randAlphaNum":               "",
	"randAscii":                  "",
	"randBytes":                  "",
	"randInt":                    "Returns a random integer value from min (inclusive) to max (exclusive).",
	"randNumeric":                "",
	"regexFind":                  "",
	"regexFindAll":               "",
	"regexMatch":                 "",
	"regexQuoteMeta":             "",
	"regexReplaceAll":            "",
	"regexReplaceAllLiteral":     "",
	"regexSplit":                 "",
	"repeat":                     "",
	"replace":                    "",
	"rest":                       "",
	"reverse":                    "Produces a new list with the reversed elements of the given list.",
	"round":                      "Returns a float value with the remainder rounded to the given number to digits after the decimal point.",
	"semver":                     "",
	"semverCompare":              "",
	"seq":                        "",
	"set":                        "",
	"sha1sum":                    "",
	"sha256sum":                  "",
	"shuffle":                    "",
	"slice":                      "",
	"snakecase":                  "",
	"sortAlpha":                  "",
	"split":                      "",
	"splitList":                  "",
	"splitn":                     "",
	"squote":                     "",
	"sub":                        "",
	"subf":                       "",
	"substr":                     "",
	"swapcase":                   "",
	"ternary":                    "",
	"title":                      "",
	"toDate":                     "",
	"toDecimal":                  "",
	"toJson":                     "",
	"toPrettyJson":               "",
	"toRawJson":                  "",
	"toString":                   "",
	"toStrings":                  "",
	"trim":                       "",
	"trimAll":                    "",
	"trimPrefix":                 "",
	"trimSuffix":                 "",
	"trimall":                    "",
	"trunc":                      "",
	"tuple":                      "",
	"typeIs":                     "",
	"typeIsLike":                 "",
	"typeOf":                     "",
	"uniq":                       "Generates a list with all of the duplicates removed.",
	"unixEpoch":                  "",
	"unset":                      "",
	"until":                      "",
	"untilStep":                  "",
	"untitle":                    "",
	"upper":                      "",
	"urlJoin":                    "",
	"urlParse":                   "",
	"values":                     "",
	"without":                    "Filters items out of a list.",
	"wrap":                       "",
	"wrapWith":                   "",
}
